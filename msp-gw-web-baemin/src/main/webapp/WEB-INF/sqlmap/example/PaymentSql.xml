<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Payment">
	<select id="autoNum" resultType="String">
		select concat('order', nvl(max(substr(order_num, 6)), 10000)+1) from payment
	</select>
	
	<select id="getQty" parameterType="map" resultType="int">
		SELECT BUY_QTY FROM ORDERLIST
		WHERE OBJECT_NUM = #{objectNum}
	</select>
	
	<select id="getObjPrice" parameterType="map" resultType="int">
		SELECT OBJECT_PRICE FROM OBJECT
		WHERE OBJECT_NUM = #{objectNum}
	</select>
	
	<select id="getPaymentDetail" parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		select m.member_num member_num, member_addr memberAddr, member_phone memberPhone, 
		pa.order_num orderNum, to_char(order_time,'YYYY-MM-DD') orderTime, payment_category paymentCategory, store_request storeRequest, order_total_price orderTotalPrice, order_status orderStatus,
		delivery_request deliveryRequest,
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(pu.object_num,',') within group (order by pu.object_num), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(OBJECT_PRICE,',') within group (order by OBJECT_PRICE), '([^,]+)(,\1)+', '\1') objectPrice,
		store_name storeName, store_addr storeAddr, store_phone storePhone, delivery_price deliveryPrice
		
		from member m, payment pa, purchase_list pu, object ob, store s
		
		where m.member_num = pa.member_num and pu.order_num = pa.order_num and ob.object_num = pu.object_num and s.store_num = ob.store_num
		and pa.order_num = #{orderNum}
		group by m.member_num, member_addr, member_phone, pa.order_num, order_Time, payment_category, store_request, order_total_price, order_status,
		delivery_request, store_name, store_addr, store_phone, delivery_price
	</select>
	
	<select id="getPaymentMember" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, menu_QTY, 
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(ob.object_num,',') within group (order by ob.object_num), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(OBJECT_IMAGE,',') within group (order by OBJECT_IMAGE), '([^,]+)(,\1)+', '\1') objectImage,
		STORE_NAME, s.STORE_NUM, 
		m.MEMBER_NUM
		from member m, payment pa, purchase_list pu, object ob, store s
		where m.member_num = pa.member_num and pu.order_num = pa.order_num and ob.object_num = pu.object_num and s.store_num = ob.store_num
				and m.member_num = #{memberNum}
		group by pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, menu_QTY, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM
		order by order_time desc
	</select>
	
	<select id="getPaymentStore" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT DISTINCT pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, MENU_QTY, 
		regexp_replace(listagg(OBJECT_NAME,',') within group (order by OBJECT_NAME), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(OBJECT_IMAGE,',') within group (order by OBJECT_IMAGE), '([^,]+)(,\1)+', '\1') objectImage,
		s.STORE_NUM, m.MEMBER_NUM
		FROM MEMBER m, PAYMENT pa, PURCHASE_LIST pu, OBJECT ob, STORE s
		WHERE m.MEMBER_NUM = pa.MEMBER_NUM and pu.ORDER_NUM = pa.ORDER_NUM AND ob.OBJECT_NUM = pu.OBJECT_NUM AND s.STORE_NUM = ob.STORE_NUM
		AND s.STORE_NUM = #{storeNum}
		GROUP BY pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, MENU_QTY, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM
		ORDER BY ORDER_TIME DESC
	</select>
	
	<select id="getPaymentDelivery" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT DISTINCT pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, MENU_QTY, 
		regexp_replace(listagg(OBJECT_NAME,',') within group (order by OBJECT_NAME), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(OBJECT_IMAGE,',') within group (order by OBJECT_IMAGE), '([^,]+)(,\1)+', '\1') objectImage,
		s.STORE_NUM, STORE_NAME, d.DELIVERY_NUM, m.MEMBER_NUM
		FROM PAYMENT pa, PURCHASE_LIST pu, OBJECT ob, STORE s, MEMBER m, DELIVERYREQUEST dr, DELIVERY d
		WHERE s.STORE_NUM = ob.STORE_NUM AND pu.OBJECT_NUM = ob.OBJECT_NUM and pa.STORE_NUM = s.STORE_NUM 
		AND m.MEMBER_NUM = pa.MEMBER_NUM AND pa.ORDER_NUM = dr.ORDER_NUM and dr.DELIVERY_NUM = d.DELIVERY_NUM
		AND pu.ORDER_NUM = pa.ORDER_NUM 
		
		AND d.delivery_NUM = #{deliveryNum}
		
		group by pa.ORDER_NUM, ORDER_TIME, ORDER_STATUS, MENU_QTY, s.STORE_NUM, STORE_NAME, d.DELIVERY_NUM, m.MEMBER_NUM
		order by order_time desc
	</select>
	
	<insert id="insertPayment">
		INSERT INTO PAYMENT
		VALUES
	    	( #{orderNum}, SYSDATE, #{paymentCategory}, #{storeRequest}, 
	    	#{orderTotalPrice}, #{memberNum}, '주문 완료', #{deliveryRequest}, #{storeNum} )
	</insert>
	<update id="insertMemInfo">
		UPDATE MEMBER SET
		MEMBER_PHONE = #{memberPhone}, 
		MEMBER_ADDRDETAIL = #{memberAddrDetail}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<delete id="paymentDelete">
		DELETE FROM PAYMENT
		WHERE ORDER_NUM = #{orderNum}
	</delete>
	
	<update id="statusUpdate">
		UPDATE PAYMENT
		SET ORDER_STATUS = #{orderStatus}
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<delete id="deleteOrder">
		DELETE FROM ORDERLIST
		WHERE MEMBER_NUM = #{memberNum}
	</delete>
	
	<!-- 구매내역서 -->
	
	<insert id="insertPurchase">
		INSERT INTO PURCHASE_LIST(ORDER_NUM, OBJECT_NUM, MEMBER_NUM, MENU_QTY, MENU_PRICE)
		SELECT #{orderNum}, ob.OBJECT_NUM, MEMBER_NUM, BUY_QTY, OBJECT_PRICE
		FROM OBJECT ob, ORDERLIST od
		WHERE ob.OBJECT_NUM = od.OBJECT_NUM AND od.MEMBER_NUM = #{memberNum} AND od.OBJECT_NUM = #{objectNum}
	</insert>
	
	<!-- ddddddddddddddddddddddddddddddddd -->
	
	<select id="getMemberAddr"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT MEMBER_ADDR FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id="getDeliveryPrice"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT DELIVERY_PRICE FROM STORE
		WHERE STORE_NUM = #{storeNum}
	</select>	
	
	<select id="getStoreName"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT STORE_NAME FROM STORE
		WHERE STORE_NUM = #{storeNum}
	</select>	
	
	<select id="getStoreNum"  parameterType="map" resultType="String">
		SELECT STORE_NUM FROM STORE
		WHERE STORE_NUM = #{storeNum}
	</select>

</mapper>