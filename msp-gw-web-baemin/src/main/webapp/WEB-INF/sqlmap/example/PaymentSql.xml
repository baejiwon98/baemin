<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Payment">
	<select id="autoNum" resultType="String">
		select concat('order', nvl(max(substr(order_num, 6)), 10000)+1) from payment
	</select>
	
	<!-- 전체 수량 가져오기 -->
	<select id="getQtyAll" parameterType="map" resultType="int">
		SELECT SUM(BUY_QTY) FROM ORDERLIST
		WHERE MEMBER_NUM = #{memberNum}
	</select>
	
	<select id="getObjPrice" parameterType="map" resultType="int">
		SELECT OBJECT_PRICE FROM OBJECT
		WHERE OBJECT_NUM = #{objectNum}
	</select>
	
	<!-- 개별 수량 가져오기 -->
	<select id="getQtyOne">	
		SELECT BUY_QTY FROM ORDERLIST
		WHERE OBJECT_NUM = #{objectNum}
		AND MEMBER_NUM = #{memberNum}
	</select>
	
	<select id="getPaymentInfo" parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT DISTINCT B.MEMBER_NUM, B.MEMBER_ADDR, B.MEMBER_PHONE, SUM(A.BUY_QTY*C.OBJECT_PRICE) OVER (PARTITION BY a.MEMBER_NUM) AS TOTAL_PRICE,
		       D.DELIVERY_PRICE,  SUM(A.BUY_QTY*C.OBJECT_PRICE) OVER (PARTITION BY a.MEMBER_NUM) + D.DELIVERY_PRICE AS ORDERTOTALPRICE, D.STORE_NUM
		FROM   ORDERLIST A
		       INNER JOIN MEMBER B ON ( A.MEMBER_NUM = B.MEMBER_NUM )
		       INNER JOIN OBJECT C ON ( A.OBJECT_NUM = C.OBJECT_NUM )   
		       INNER JOIN STORE D ON ( C.STORE_NUM = D.STORE_NUM )
		WHERE  B.MEMBER_NUM = #{memberNum} and cancelYN = 'N'
	</select>
	
	<!-- 주문내역 상세정보 -->
	<select id="getPaymentDetail" parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		select m.member_num memberNum, mem_address memAddress, mem_phone memPhone, store_addr storeAddr,
		pa.order_num orderNum, to_char(order_time,'YYYY-MM-DD') orderTime, payment_category paymentCategory, store_request storeRequest, 
        order_total_price orderTotalPrice, order_status orderStatus, delivery_request deliveryRequest,
		store_name storeName, store_addr storeAddr, store_phone storePhone, delivery_price deliveryPrice
		
		from member m, payment pa, purchase_list pu, object ob, store s
		
		WHERE m.member_num = pa.member_num and pu.order_num = pa.order_num and ob.object_num = pu.object_num and s.store_num = ob.store_num
		AND pa.order_num = #{orderNum}
		group BY m.member_num, mem_address, mem_phone, pa.order_num, order_Time, payment_category, store_request, order_total_price, order_status,
		delivery_request, store_name, store_addr, store_phone, delivery_price
	</select>
	
	<!-- 주문내역 상세정보의 메뉴 항목 -->
	<select id="getPaymentMenuDetail" parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		select distinct p.object_num, menu_qty, menu_price, object_name
		from purchase_list p, object o
		where p.object_num = o.object_num and
		order_num = #{orderNum}
	</select>
	
	<select id="getPaymentMember" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT 
		p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, review_score, 
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(OBJECT_IMAGE,',') within group (order by OBJECT_IMAGE), '([^,]+)(,\1)+', '\1') objectImage,
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(MENU_QTY,',') within group (order by MENU_QTY), '([^,]+)(,\1)+', '\1') menuQty
		FROM review r, PAYMENT p, OBJECT ob, STORE s, MEMBER m, purchase_list pu
		WHERE pu.object_num = ob.object_num and p.STORE_NUM = s.STORE_NUM 
        and m.MEMBER_NUM = p.MEMBER_NUM and p.order_num = pu.order_num
        and p.order_num = r.order_num(+)
        and m.MEMBER_NUM = #{memberNum} and cancelYN = 'N'
		group by p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, review_score
		order by order_time desc
	</select>
	
	<!-- 사장 자신의 가게에 들어온 총 주문 목록 -->
	<select id="getPaymentStore" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		select p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, MEM_ADDRESS, 
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
        listagg(object_name,',') within group (order by object_name) objectName,
        listagg(menu_qty,',') within group (order by menu_qty) menuQty
		FROM  STORE s, OBJECT ob, purchase_list pu, PAYMENT p,  MEMBER m
		where s.STORE_NUM = ob.STORE_NUM 
		and ob.object_num = pu.object_num
		and pu.order_num = p.order_num
		and p.member_num = m.member_num
		and cancelYN = 'N'
		AND s.STORE_NUM = #{storeNum}
		group by p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, MEM_ADDRESS
		order by order_time desc

	</select>
	
	<!-- 현재 사장 자신의 가게에 들어온 주문 목록 (승인할 수 있고 취소할 수도 있다)-->
	
		<!-- SELECT 
		p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM,
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(OBJECT_IMAGE,',') within group (order by OBJECT_IMAGE), '([^,]+)(,\1)+', '\1') objectImage,
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(MENU_QTY,',') within group (order by MENU_QTY), '([^,]+)(,\1)+', '\1') menuQty
		FROM PAYMENT p, OBJECT ob, STORE s, MEMBER m, PURCHASE_LIST pu
		WHERE pu.object_num = ob.object_num AND p.STORE_NUM = s.STORE_NUM 
        AND m.MEMBER_NUM = p.MEMBER_NUM AND p.ORDER_NUM = pu.ORDER_NUM
        AND s.STORE_NUM = #{storeNum} AND ORDER_STATUS ='주문 완료'
		GROUP BY p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM
		ORDER BY ORDER_TIME DESC -->
	<select id="getPaymentStoreNow" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		select p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, MEM_ADDRESS, 
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (order by ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
        listagg(object_name,',') within group (order by object_name) objectName,
        regexp_replace(listagg(MENU_QTY,',') within group (order by MENU_QTY), '([^,]+)(,\1)+', '\1') menuQty
		FROM  STORE s, OBJECT ob, purchase_list pu, PAYMENT p,  MEMBER m
		where s.STORE_NUM = ob.STORE_NUM 
		and ob.object_num = pu.object_num
		and pu.order_num = p.order_num
		and p.member_num = m.member_num and cancelYN = 'N'
		AND s.STORE_NUM = #{storeNum} AND ORDER_STATUS ='주문 완료'
		group by p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, MEM_ADDRESS
		order by order_time desc
	</select>
	
	<!-- 라이더의 총 주문 목록 -->
	<select id="getPaymentDelivery" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		select d.delivery_num, dr.order_num, order_status, p.member_num, p.store_num, mem_address, order_time,
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(pu.object_num,',') within group (order by pu.object_num), '([^,]+)(,\1)+', '\1') objectNum,
        regexp_replace(listagg(menu_qty,',') within group (order by menu_qty), '([^,]+)(,\1)+', '\1') menuQty,
		store_name, store_addr
		from delivery d, deliveryrequest dr, 
		payment p, purchase_list pu, object o, store s
		where d.delivery_num = dr.delivery_num
		and pu.object_num = o.object_num
		and p.store_num = s.store_num
		and pu.order_num = p.order_num
		and dr.order_num = p.order_num
		and p.order_status = '배달 완료'
		and cancelYN = 'N'
		and d.delivery_num = #{deliveryNum}		
		group by d.delivery_num, store_addr, dr.order_num, order_status, store_name, p.member_num, p.store_num, mem_address, order_time
		order by order_num desc
	</select>
	
	<!-- 라이더가 현재 배달 중인 주문 목록 -->
	<select id="getPaymentDeliverying" parameterType="map" resultType="edu.example.dto.OrderViewDto" >
		select d.delivery_num, dr.order_num, order_status, p.member_num, p.store_num, mem_address, order_time,
		regexp_replace(listagg(object_name,',') within group (order by object_name), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(pu.object_num,',') within group (order by pu.object_num), '([^,]+)(,\1)+', '\1') objectNum,
        regexp_replace(listagg(menu_qty,',') within group (order by menu_qty), '([^,]+)(,\1)+', '\1') menuQty,
		store_name, store_addr
		from delivery d, deliveryrequest dr, 
		payment p, purchase_list pu, object o, store s
		where d.delivery_num = dr.delivery_num
		and pu.object_num = o.object_num
		and p.store_num = s.store_num
		and pu.order_num = p.order_num
		and dr.order_num = p.order_num
		and cancelYN = 'N'
		and (p.order_status = '배달 중' or p.order_status = '배달대기중') and d.delivery_num = #{deliveryNum}
		group by d.delivery_num, store_addr, dr.order_num, order_status, store_name, p.member_num, p.store_num, mem_address, order_time
		order by order_num desc
	</select>
	
	<!-- 라이더가 배달할 수 있는 주문 목록 -->
	<select id="getPaymentDeliveryNow" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT 
		p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, store_addr,
		regexp_replace(listagg(object_name,',') within group (ORDER BY OBJECT_NAME), '([^,]+)(,\1)+', '\1') objectName,
		regexp_replace(listagg(ob.OBJECT_NUM,',') within group (ORDER BY ob.OBJECT_NUM), '([^,]+)(,\1)+', '\1') objectNum,
		regexp_replace(listagg(MENU_QTY,',') within group (order by MENU_QTY), '([^,]+)(,\1)+', '\1') menuQty
		FROM PAYMENT p, OBJECT ob, STORE s, MEMBER m, PURCHASE_LIST pu
		WHERE pu.object_num = ob.object_num AND p.STORE_NUM = s.STORE_NUM 
        AND m.MEMBER_NUM = p.MEMBER_NUM AND p.ORDER_NUM = pu.ORDER_NUM
        AND p.ORDER_STATUS ='조리 완료'
        and cancelYN = 'N'
		GROUP BY p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, STORE_NAME, s.STORE_NUM, m.MEMBER_NUM, store_addr
		ORDER BY ORDER_TIME DESC
	</select>
	
	
<!-- 	<select id="getPaymentDelivery" parameterType="map" resultType="edu.example.dto.OrderViewDto">
		SELECT p.ORDER_NUM, ORDER_TIME, ORDER_STATUS, BUY_QTY, OBJECT_NAME, OBJECT_IMAGE, s.STORE_NUM, STORE_NAME, ob.OBJECT_NUM, d.DELIVERY_NUM, m.MEMBER_NUM
		FROM PAYMENT p, ORDERLIST od, OBJECT ob, STORE s, MEMBER m, DELIVERYREQUEST dr, DELIVERY d
		WHERE s.STORE_NUM = ob.STORE_NUM AND od.OBJECT_NUM = ob.OBJECT_NUM and p.STORE_NUM = s.STORE_NUM 
		AND m.MEMBER_NUM = p.MEMBER_NUM AND p.order_num = dr.order_num and dr.delivery_num = d.delivery_num
		AND d.delivery_NUM = #{deliveryNum}
	</select> -->
	
	
	
	<insert id="insertPaymentP">
		INSERT INTO PAYMENT(ORDER_NUM, ORDER_TIME, PAYMENT_CATEGORY, STORE_REQUEST,
		ORDER_TOTAL_PRICE, MEMBER_NUM, ORDER_STATUS, STORE_NUM, MEM_PHONE, cancelYN )
		VALUES
	    	( #{orderNum}, SYSDATE, #{paymentCategory}, #{storeRequest}, 
	    	#{orderTotalPrice}, #{memberNum}, '주문 완료', #{storeNum}, #{memPhone}, 'N' )
	</insert>
	
	<insert id="insertPaymentD">
		INSERT INTO PAYMENT(ORDER_NUM, ORDER_TIME, PAYMENT_CATEGORY, STORE_REQUEST,
		ORDER_TOTAL_PRICE, MEMBER_NUM, ORDER_STATUS, delivery_Request, STORE_NUM, mem_Address, MEM_PHONE, cancelYN )
		VALUES
	    	( #{orderNum}, SYSDATE, #{paymentCategory}, #{storeRequest}, 
	    	#{orderTotalPrice}, #{memberNum}, '주문 완료', #{deliveryRequest}, #{storeNum}, #{memAddress}, #{memPhone}, 'N'  )
	</insert>
	
	
	
	<update id="insertMemInfo">
		UPDATE MEMBER SET
		MEMBER_PHONE = #{memberPhone}, 
		MEMBER_ADDRDETAIL = #{memberAddrDetail}
		WHERE MEMBER_NUM = #{memberNum}
	</update>
	
	<update id="paymentDelete">
		UPDATE PAYMENT SET 
		cancelYN = 'Y'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	

	<update id="objectQtyUpdate">
		update object set
		object_qty = object_qty - #{menuQty}
		where object_num = #{objectNum}
	</update>
	
	<update id="statusCancel">
		UPDATE PAYMENT
		SET ORDER_STATUS = '주문 취소'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusCooking">
		UPDATE PAYMENT
		SET ORDER_STATUS = '조리 중'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusCookEnd">
		UPDATE PAYMENT
		SET ORDER_STATUS = '조리 완료'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusDeliveryWait">
		UPDATE PAYMENT
		SET ORDER_STATUS = '배달대기중'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<insert id="deliveryMatching">
		INSERT INTO DELIVERYREQUEST(order_Num, delivery_Num)
		VALUES(#{orderNum}, #{deliveryNum})
	</insert>
	
	<update id="statusDeliverying">
		UPDATE PAYMENT
		SET ORDER_STATUS = '배달 중'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusDelvieryEnd">
		UPDATE PAYMENT
		SET ORDER_STATUS = '배달 완료'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusPickUpWait">
		UPDATE PAYMENT
		SET ORDER_STATUS = '픽업대기중'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="statusPickUpEnd">
		UPDATE PAYMENT
		SET ORDER_STATUS = '픽업 완료'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<delete id="deleteOrder">
		DELETE FROM ORDERLIST
		WHERE MEMBER_NUM = #{memberNum}
	</delete>
	
	<!-- 구매내역서 -->
	
	<insert id="insertPurchase">
		INSERT INTO PURCHASE_LIST(ORDER_NUM, OBJECT_NUM, MEMBER_NUM, MENU_QTY, MENU_PRICE)
		SELECT #{orderNum}, ob.OBJECT_NUM, MEMBER_NUM, BUY_QTY, OBJECT_PRICE * BUY_QTY
		FROM OBJECT ob, ORDERLIST od
		WHERE ob.OBJECT_NUM = od.OBJECT_NUM AND od.MEMBER_NUM = #{memberNum} 
	</insert>
	
	<!-- ddddddddddddddddddddddddddddddddd -->
	
	<select id="getMemberAddr"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT MEMBER_ADDR FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<select id="getDeliveryPrice"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT DELIVERY_PRICE FROM STORE
		WHERE STORE_NUM = #{storeNum}
	</select>	
	
	<select id="getStoreName"  parameterType="map" resultType="edu.example.dto.PaymentDetailDto">
		SELECT STORE_NAME FROM STORE
		WHERE STORE_NUM = #{storeNum}
	</select>	
	
	<insert id="newAlarm">
		INSERT INTO ALARM(ORDER_NUM, MEM_ALARM, EMP_ALARM, DELIVERY_ALARM)
		VALUES(#{orderNum}, 0, 0, 0)
	</insert>
	
	<update id="memberGoAlarm">
		UPDATE ALARM SET
		MEM_ALARM = (MEM_ALARM+1)
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<update id="employeeGoAlarm">
		UPDATE ALARM SET
		EMP_ALARM = (EMP_ALARM+1)
		WHERE ORDER_NUM = #{orderNum}
	</update>	
	
	<update id="deliveryGoAlarm">
		UPDATE ALARM SET
		DELIVERY_ALARM = (DELIVERY_ALARM+1)
		WHERE ORDER_NUM = #{orderNum}
	</update>
		
	<!-- 조리 중 -->
	<update id="cooking">
		UPDATE ALARM SET
		MEM_ALARM = 1,
		EMP_ALARM = 1,
		DELIVERY_ALARM = 0
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 픽업 대기 -->
	<update id="pickUpWait">
		UPDATE ALARM SET
		MEM_ALARM = 10,
		EMP_ALARM = 10,
		DELIVERY_ALARM = 0
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 픽업 완료 -->
	<update id="pickUpEnd">
		UPDATE ALARM SET
		MEM_ALARM = 20,
		EMP_ALARM = 20,
		DELIVERY_ALARM = 0
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 주문 취소 -->
	<update id="orderCancel">
		UPDATE ALARM SET
		MEM_ALARM = 90,
		EMP_ALARM = 1,
		DELIVERY_ALARM = 0
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 조리 완료 -->
	<update id="cookingEnd">
		UPDATE ALARM SET
		MEM_ALARM = 30,
		EMP_ALARM = 30,
		DELIVERY_ALARM = 30
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 배달 대기 -->
	<update id="deliveryWait">
		UPDATE ALARM SET
		MEM_ALARM = 40,
		EMP_ALARM = 40,
		DELIVERY_ALARM = 40
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 배달 중 -->
	<update id="deliverying">
		UPDATE ALARM SET
		MEM_ALARM = 50,
		EMP_ALARM = 50,
		DELIVERY_ALARM = 50
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	<!-- 배달 완료 -->
	<update id="deliveryEnd">
		UPDATE ALARM SET
		MEM_ALARM = 60,
		EMP_ALARM = 60,
		DELIVERY_ALARM = 60
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	
	<select id="AlarmChk" parameterType="map" resultType="edu.example.dto.AlarmDto">
      select a.order_num, mem_alarm, emp_alarm, delivery_alarm
      from alarm a, payment p
      where a.order_num = p.order_num
      and member_num = #{userNum}
      
      union
      
      select a.order_num, mem_alarm, emp_alarm, delivery_alarm
      from alarm a, payment p
      where a.order_num = p.order_num 
      and store_num = #{userNum}
      
      union
      
      select a.order_num, mem_alarm, emp_alarm, delivery_alarm
      from alarm a, payment p, deliveryrequest d
      where a.order_num = p.order_num and p.order_num = d.order_num
      and d.delivery_num = #{userNum}
   </select>
	
</mapper>